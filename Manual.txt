
The database
------------

  The fields
  Examples
  How to fill it in
  Utilities: trans.sed   --> Sed script used to translate pidgin-TeX in abstracts to HTML.
  Editing YouTube titles by hand
  Preparing the schedule — entering a Break
  Limitations

The programs that it drives
---------------------------

  The program
  The schedule
  What-is-on
  Title-Cards
  Reminder
  Social media feeds
  Credits
  YouTube upload


How to enter an Abstract
------------------------

In general, we get from the author a text that is already
in pidginTeX, or a full TeX file as in 

      abstracts/moore-tables.tex

Cleaning it up from most opening and closing material we 
can leave the essential part in a .txt file as in:

      abstracts/moore-tables.txt

Which can then be converted, using the small TeX to HTML 
sed translator:

    sed -f trans.sed moore-tables.txt > moore-tables.html

One can then eliminate all NEWLINES to produce:

      abstracts/moore-tables-ready.html

which is ready to be included in the "pres.dat" file and
then have the program generated by

      node make-schedule.js

From this point on, unless the changes are really major,
all the editing of the Abstracts should be done inside 
the pres.dat database. A copy of the small abstract should 
be kept for major changes.

The "abstract" has to be written as a one-liner into the "pres.dat"
file.

If there is more than one paragraph, they should be broken in two BR,
that is

    <br /> <br />


If there are lists (ordered or unordered, they have to be held inside
the structure of the <div>'s below:


      <div class="panel">
      <p>
      In this talk I will present two packages:</p>
        <div class="row">
            <div class="column">
               <ul>
                  <li>tagpdf which contains the core....</li>
                  <li>pdfmanagement-testphase which contains a large .....</li>
               </ul>
            </div>
        </div>
        <p>I will show how to use these packages...
      </p>
      </div>

and outside <p> tags.

How to update it
----------------

  Depositing slides, preprints, etc ...
  make-schedule.js     -->    run it with the command "node make-schedule.js"
  presentations.js     -->    Needed by make-schedule.js and whats-on.js


Video processing
----------------

Downloading videos processed by Norbert:
----------------------------------------

The processed files are, in general, deposited by Norbert
into a OneDrive from Microsoft, that has a known problem
making Zip files with more than 4 Gigs, which is always 
our case.

The problem with the Zip files is described in:

https://www.bitsgalore.org/2020/03/11/does-microsoft-onedrive-export-large-ZIP-files-that-are-corrupt

And you can download a script to fix the files at:

https://github.com/pmqs/Fix-OneDrive-Zip

and execute:

    fix-onedrive-zip OneDrive-2022-08-28.zip

then proceed to the unzipping.



YouTube uploads
---------------

Auxiliary files::
-----------------

  sched.html.in
  development-scripts.html.in
  production-scripts.html.in







The database
------------

This describes the flat-file DB that is used to move the entire 
structure, from simple web-pages and structure for social media
apps to the running of the conference with announcements and 
reminders to the production of calendars, title-cards for 
lectures, and production and upload of videos to YouTube.

The database should be kept clean of errors, so all these
functions work as expected. What follows is a description of
the fields and the way to populate some special ones.

All text is entered in UTF-8, with:

  --  "title" and "abstract" should be entered in HTML. 
  --  "title-yt" should be strict text with no markup and 100 characters or less
  --  "abstract-yt" can use *...* and _..._ a la Markdown, should be 5000 characters or less.
  
%UTF-8 should be used in all opportunities, for example:
UTF-8 should be used in all fields where appropriate, for example:

  accents: á, é, ü, ... 
  quotation marks: ‘, ’, “, ”
  apostrophe: ’ 
  dashes: –, —,  ...
  subscript and superscript: 21ˢᵗ


The fields are:

  pres:
  author:
  author-ascii:
  title:
  title-html:
  title-yt:
  keynote:
  abstract:
  abstract-html:
  abstract-yt:
  delivery:
  links:
  videos:
  timezone:
  time:


Recently Deprecated:
--------------------

  sources:
  slides:
  preprint:

The deposit of slides, sources and preprints has been greatly simplified.
 "make-schedule" will now create the directories:

     assets/incoming/$pres/slides/
     assets/incoming/$pres/preprint/
     assets/incoming/$pres/sources/

and you can just place the file there -- with any name -- and the script
will create a file with the appropriate name, like:

      Aditya_Ohri-Tanya_Schmah-TUG2022-ohri-mathtrans-slides.pdf

all automated. You do not even need to create the directory.

---------
The entries "author", "links" and "videos" can have multiple entries,
%each entry separated by comma.
with entries separated by commas.

As soon as the key (pres) for each entry in the database is entered, a series
of directories are organized:

"make-schedule.js" has been changed to properly format an author list with commas
and "and". Check the current staging server to see how it looks:

       https://tug.org/tug2022/Devel/program.html

We have also added an
  
    abstract-yt

that will contain some sort of pidgin-Markdown that YouTube accepts as a "description" 
of the video. This has been written with another small translator I wrote quickly and we
tested on all entries -- after some hand interventions -- and it seems okay. You can 
check that on our YouTube channel. 

Examples are:

--------
pres: guichard-ltxworkshop
author: Éric Guichard,Jean-Michel Hufflen
title: LaTeX workshop in French
timezone: +0200
time: 2022-07-21T13:00:00Z
slides: assets/pdf/Éric_Guichard-TUG2022-Workshop-Slides.pdf,assets/pdf/J.-M._Hufflen-TUG2022-Workshop-Slides.pdf
sources: assets/pdf/Éric_Guichard.tar.gz,assets/pdf/hufflen-demo.tar.gz,assets/pdf/hufflen-main.tex.gz,assets/pdf/hufflen-t.tex.gz
abstract: Un atelier de LaTex en Français.

pres: mueller-stex3
author: Dennis Müller,Michael Kohlhase
authorascii: Dennis Mueller,Michael Kohlhase
title: s<span class="tex">T<span>e</span>X</span>3 — A <span class="latex">L<span>a</span>T<span>e</span>X</span>-based ecosystem for semantic/active mathematical documents
title-yt: TUG 2022 — D. Müller & M. Kohlhase — sTeX3 — A LaTeX ecosystem for semantic/active math documents
timezone: +0200
time: 2022-07-24T08:30:00Z
abstract: We report on s<span class="tex">T<span>e</span>X</span>3– a complete redesign and reimplementation (using <span class="latex">L<span>a</span>T<span>e</span>X</span>3) from the ground up of the s<span class="tex">T<span>e</span>X</span> ecosystem for semantic markup of mathematical documents. Specifically, we present: </p> <div class="row"> <div class="column"> <ol> <li> The s<span class="tex">T<span>e</span>X</span> package that allows declaring semantic macros and provides a module system for organizing and importing semantic macros using logical identifiers. Semantic macros allow for annotating arbitrary LaTeX fragments, particularly symbolic notations and formulae, with their functional structure and formal semantics while keeping their presentation/layout intact. The module system induces a “theory graph”-structure on mathematical concepts, reflecting their dependencies and other semantic relations. </li> <li> The Rus<span class="tex">T<span>e</span>X</span> system, an implementation of the core <span class="tex">T<span>e</span>X</span> engine in Rust. Generally Rus<span class="tex">T<span>e</span>X</span> allows for converting arbitrary <span class="latex">L<span>a</span>T<span>e</span>X</span> documents to <span class="sm-caps">XHTML</span>. For s<span class="tex">T<span>e</span>X</span>3 documents, these are enriched with semantic annotations based on the flexiformal <span class="sm-caps">OMD</span>oc ontology. </li> <li> An <span class="sm-caps">MMT</span> integration: The Rus<span class="tex">T<span>e</span>X</span>-generated <span class="sm-caps">XHTML</span> can be imported and served by the <span class="sm-caps">MMT</span> system for semantically-informed knowledge management services, e.g., linking symbols in formulae to their definition or “guided tour” mini-courses for any (semantically annotated) mathematical concept/object. </li> </ol> </div> </div> <p>Generally, s<span class="tex">T<span>e</span>X</span>3 documents can be made not only interactive (by embedding semantic services), but also “active” in that they actively adapt to reader preferences and pre-knowledge (if known).
abstract-yt: We report on s*TeX*3– a complete redesign and reimplementation (using *LaTeX*3) from the ground up of the s*TeX* ecosystem for semantic markup of mathematical documents. Specifically, we present: The s*TeX* package that allows declaring semantic macros and provides a module system for organizing and importing semantic macros using logical identifiers. Semantic macros allow for annotating arbitrary LaTeX fragments, particularly symbolic notations and formulae, with their functional structure and formal semantics while keeping their presentation/layout intact. The module system induces a “theory graph”-structure on mathematical concepts, reflecting their dependencies and other semantic relations.  The Rus*TeX* system, an implementation of the core *TeX* engine in Rust. Generally Rus*TeX* allows for converting arbitrary *LaTeX* documents to *XHTML*. For s*TeX*3 documents, these are enriched with semantic annotations based on the flexiformal *OMD*oc ontology. An *MMT* integration: The Rus*TeX*-generated *XHTML* can be imported and served by the *MMT* system for semantically-informed knowledge management services, e.g., linking symbols in formulae to their definition or “guided tour” mini-courses for any (semantically annotated) mathematical concept/object. Generally, s*TeX*3 documents can be made not only interactive (by embedding semantic services), but also “active” in that they actively adapt to reader preferences and pre-knowledge (if known).
links: https://gl.mathhub.info/MiKoMH/talks/-/blob/main/source/dmueller/talks/tug22.tex
videos: https://youtu.be/-P4QcOmcs6g

---------

The format for the breaks is:

---------
pres: break
time: 2022-07-21T22:00:00Z
title: Break,
---------

Right now the comma after the word "Break" in the title is required.
We hope to fix that soon.

The way to enter the Poshlets TeX, LaTeX, XeTeX and XeLaTeX are:

       <span class="tex">T<span>e</span>X</span>
       
       <span class="latex">L<span>a</span>T<span>e</span>X</span>
       
       <span class="xetex">X<span>&#398;</span>T<span>e</span>X</span>
       
To enter acronyms, use Small Caps:

       <span class="sm-caps">PDF</span>

Editing YouTube titles by hand
------------------------------

YouTube titles need an identification of the Conference and the Speaker
for SEO, and have a stringent limitation of 100 characters. With the talk
with several speakers and very long titles, the shortening of the YT title
is necessary

Here are the examples from TUG 2022:
                                                                                                100 mark
Before:                                                                                            |
                                                                                                   |
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
TUG 2022 — Hubert Hickman, Matthew Mariano, Haibin Wu & Hong Dat Cheung — Using LaTeX deployed in AWS as a PDF report generation tool for a cancer clinical trial search engine
TUG 2022 — David Blakesley — The residual concepts of production vs. the emergent cultures of distribution in publishing
TUG 2022 — Dennis Müller & Michael Kohlhase — sTeX3 — A LaTeX-based ecosystem for semantic/active mathematical documents
TUG 2022 — Oleksandr Baranovskyi — LaTeX classes for doctoral theses in Ukraine: Interesting tips and painful problems
TUG 2022 — Ulrike Fischer — New in stock—a walk through recent LaTeX improvements (that you may have missed)


                                                                                                100 mark
After:                                                                                             |
                                                                                                   |
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
TUG 2022 — H. Hickman et al. — Using LaTeX as a report generation tool for a clinical trial
TUG 2022 — D. Blakesley — Old production concepts vs. emergent distribution cultures in publishing
TUG 2022 — D. Müller & M. Kohlhase — sTeX3 — A LaTeX ecosystem for semantic/active math documents
TUG 2022 — Oleksandr Baranovskyi — LaTeX classes for doctoral theses in Ukraine: Tips and problems
TUG 2022 — Ulrike Fischer — New in stock — recent LaTeX improvements (that you may have missed)



Limitations of the DB:
----------------------

We do not have a way, currently, to associate two different TZs
for different authors. The TZ to be used will be of the person
preferably giving the talk.

All fields are one-liners, including the abstract. If a newline
is necessary use the <p> tag.


Utilities for help writing the DB
----------------------------------

"trans.sed" is a small sed script to change pidgin-TeX to HTML, for the title and abstract.


The program that it drives
--------------------------
      whats-on.html   -->   https://tug.org/tug2021/whats-on.html?time=test

How to update it
----------------

git pull
 (make your edits)
git commit -a
git push

Auxiliary files::
-----------------

